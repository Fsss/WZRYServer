// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WZRYMessageProto.proto

#include "WZRYMessageProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace WZRY {
class CloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseRequest>
      _instance;
} _CloseRequest_default_instance_;
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse>
      _instance;
} _LoginResponse_default_instance_;
class RegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterRequest>
      _instance;
} _RegisterRequest_default_instance_;
class RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse>
      _instance;
} _RegisterResponse_default_instance_;
class MatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchRequest>
      _instance;
} _MatchRequest_default_instance_;
class MatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchResponse>
      _instance;
} _MatchResponse_default_instance_;
class ChatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatRequest>
      _instance;
} _ChatRequest_default_instance_;
class ChatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatResponse>
      _instance;
} _ChatResponse_default_instance_;
class SkillRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SkillRequest>
      _instance;
} _SkillRequest_default_instance_;
class SkillResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SkillResponse>
      _instance;
} _SkillResponse_default_instance_;
}  // namespace WZRY
namespace protobuf_WZRYMessageProto_2eproto {
void InitDefaultsCloseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_CloseRequest_default_instance_;
    new (ptr) ::WZRY::CloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::CloseRequest::InitAsDefaultInstance();
}

void InitDefaultsCloseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseRequestImpl);
}

void InitDefaultsLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_LoginRequest_default_instance_;
    new (ptr) ::WZRY::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::LoginRequest::InitAsDefaultInstance();
}

void InitDefaultsLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRequestImpl);
}

void InitDefaultsLoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_LoginResponse_default_instance_;
    new (ptr) ::WZRY::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::LoginResponse::InitAsDefaultInstance();
}

void InitDefaultsLoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginResponseImpl);
}

void InitDefaultsRegisterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_RegisterRequest_default_instance_;
    new (ptr) ::WZRY::RegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::RegisterRequest::InitAsDefaultInstance();
}

void InitDefaultsRegisterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterRequestImpl);
}

void InitDefaultsRegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_RegisterResponse_default_instance_;
    new (ptr) ::WZRY::RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::RegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsRegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterResponseImpl);
}

void InitDefaultsMatchRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_MatchRequest_default_instance_;
    new (ptr) ::WZRY::MatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::MatchRequest::InitAsDefaultInstance();
}

void InitDefaultsMatchRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchRequestImpl);
}

void InitDefaultsMatchResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_MatchResponse_default_instance_;
    new (ptr) ::WZRY::MatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::MatchResponse::InitAsDefaultInstance();
}

void InitDefaultsMatchResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchResponseImpl);
}

void InitDefaultsChatRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_ChatRequest_default_instance_;
    new (ptr) ::WZRY::ChatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::ChatRequest::InitAsDefaultInstance();
}

void InitDefaultsChatRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatRequestImpl);
}

void InitDefaultsChatResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_ChatResponse_default_instance_;
    new (ptr) ::WZRY::ChatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::ChatResponse::InitAsDefaultInstance();
}

void InitDefaultsChatResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatResponseImpl);
}

void InitDefaultsSkillRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_SkillRequest_default_instance_;
    new (ptr) ::WZRY::SkillRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::SkillRequest::InitAsDefaultInstance();
}

void InitDefaultsSkillRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSkillRequestImpl);
}

void InitDefaultsSkillResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_SkillResponse_default_instance_;
    new (ptr) ::WZRY::SkillResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::SkillResponse::InitAsDefaultInstance();
}

void InitDefaultsSkillResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSkillResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::CloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRequest, islogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRequest, passwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginResponse, issuccess_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterRequest, newusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterRequest, newpasswd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterResponse, issuccess_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchRequest, ismatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchRequest, matchtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchResponse, issuccess_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchResponse, matchmessage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatRequest, chatmessage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatResponse, chatmessage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::SkillRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::SkillRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::SkillRequest, skillid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::SkillResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::SkillResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::SkillResponse, skillid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::WZRY::CloseRequest)},
  { 5, -1, sizeof(::WZRY::LoginRequest)},
  { 13, -1, sizeof(::WZRY::LoginResponse)},
  { 20, -1, sizeof(::WZRY::RegisterRequest)},
  { 27, -1, sizeof(::WZRY::RegisterResponse)},
  { 34, -1, sizeof(::WZRY::MatchRequest)},
  { 41, -1, sizeof(::WZRY::MatchResponse)},
  { 48, -1, sizeof(::WZRY::ChatRequest)},
  { 55, -1, sizeof(::WZRY::ChatResponse)},
  { 62, -1, sizeof(::WZRY::SkillRequest)},
  { 69, -1, sizeof(::WZRY::SkillResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_CloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_MatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_MatchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_ChatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_ChatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_SkillRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_SkillResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "WZRYMessageProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026WZRYMessageProto.proto\022\004WZRY\"\016\n\014CloseR"
      "equest\"A\n\014LoginRequest\022\017\n\007islogin\030\001 \001(\010\022"
      "\020\n\010username\030\002 \001(\t\022\016\n\006passwd\030\003 \001(\t\"3\n\rLog"
      "inResponse\022\021\n\tissuccess\030\001 \001(\010\022\017\n\007message"
      "\030\002 \001(\t\"9\n\017RegisterRequest\022\023\n\013newusername"
      "\030\001 \001(\t\022\021\n\tnewpasswd\030\002 \001(\t\"6\n\020RegisterRes"
      "ponse\022\021\n\tissuccess\030\001 \001(\010\022\017\n\007message\030\002 \001("
      "\t\"2\n\014MatchRequest\022\017\n\007ismatch\030\001 \001(\010\022\021\n\tma"
      "tchtype\030\002 \001(\005\"8\n\rMatchResponse\022\021\n\tissucc"
      "ess\030\001 \001(\010\022\024\n\014matchmessage\030\002 \001(\t\".\n\013ChatR"
      "equest\022\n\n\002id\030\001 \001(\005\022\023\n\013chatmessage\030\002 \001(\t\""
      "/\n\014ChatResponse\022\n\n\002id\030\001 \001(\005\022\023\n\013chatmessa"
      "ge\030\002 \001(\t\"+\n\014SkillRequest\022\n\n\002id\030\001 \001(\005\022\017\n\007"
      "skillid\030\002 \001(\005\",\n\rSkillResponse\022\n\n\002id\030\001 \001"
      "(\005\022\017\n\007skillid\030\002 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 587);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WZRYMessageProto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_WZRYMessageProto_2eproto
namespace WZRY {

// ===================================================================

void CloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseRequest::CloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsCloseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.CloseRequest)
}
CloseRequest::CloseRequest(const CloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WZRY.CloseRequest)
}

void CloseRequest::SharedCtor() {
  _cached_size_ = 0;
}

CloseRequest::~CloseRequest() {
  // @@protoc_insertion_point(destructor:WZRY.CloseRequest)
  SharedDtor();
}

void CloseRequest::SharedDtor() {
}

void CloseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseRequest::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseRequest& CloseRequest::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsCloseRequest();
  return *internal_default_instance();
}

CloseRequest* CloseRequest::New(::google::protobuf::Arena* arena) const {
  CloseRequest* n = new CloseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.CloseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.CloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.CloseRequest)
  return false;
#undef DO_
}

void CloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.CloseRequest)
}

::google::protobuf::uint8* CloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.CloseRequest)
  return target;
}

size_t CloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.CloseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.CloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.CloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.CloseRequest)
    MergeFrom(*source);
  }
}

void CloseRequest::MergeFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.CloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseRequest::CopyFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseRequest::IsInitialized() const {
  return true;
}

void CloseRequest::Swap(CloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseRequest::InternalSwap(CloseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseRequest::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kIsloginFieldNumber;
const int LoginRequest::kUsernameFieldNumber;
const int LoginRequest::kPasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  islogin_ = from.islogin_;
  // @@protoc_insertion_point(copy_constructor:WZRY.LoginRequest)
}

void LoginRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  islogin_ = false;
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:WZRY.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsLoginRequest();
  return *internal_default_instance();
}

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  islogin_ = false;
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool islogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.LoginRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), static_cast<int>(this->passwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.LoginRequest.passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool islogin = 1;
  if (this->islogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->islogin(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginRequest.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool islogin = 1;
  if (this->islogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->islogin(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginRequest.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // bool islogin = 1;
  if (this->islogin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.islogin() != 0) {
    set_islogin(from.islogin());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  passwd_.Swap(&other->passwd_);
  swap(islogin_, other->islogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kIssuccessFieldNumber;
const int LoginResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsLoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  issuccess_ = from.issuccess_;
  // @@protoc_insertion_point(copy_constructor:WZRY.LoginResponse)
}

void LoginResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _cached_size_ = 0;
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:WZRY.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginResponse& LoginResponse::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsLoginResponse();
  return *internal_default_instance();
}

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _internal_metadata_.Clear();
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool issuccess = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.LoginResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.LoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.issuccess() != 0) {
    set_issuccess(from.issuccess());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(issuccess_, other->issuccess_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterRequest::kNewusernameFieldNumber;
const int RegisterRequest::kNewpasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterRequest::RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsRegisterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.RegisterRequest)
}
RegisterRequest::RegisterRequest(const RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newusername().size() > 0) {
    newusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newusername_);
  }
  newpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newpasswd().size() > 0) {
    newpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newpasswd_);
  }
  // @@protoc_insertion_point(copy_constructor:WZRY.RegisterRequest)
}

void RegisterRequest::SharedCtor() {
  newusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:WZRY.RegisterRequest)
  SharedDtor();
}

void RegisterRequest::SharedDtor() {
  newusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpasswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterRequest::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterRequest& RegisterRequest::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsRegisterRequest();
  return *internal_default_instance();
}

RegisterRequest* RegisterRequest::New(::google::protobuf::Arena* arena) const {
  RegisterRequest* n = new RegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.RegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string newusername = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newusername().data(), static_cast<int>(this->newusername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.RegisterRequest.newusername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string newpasswd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newpasswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newpasswd().data(), static_cast<int>(this->newpasswd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.RegisterRequest.newpasswd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.RegisterRequest)
  return false;
#undef DO_
}

void RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string newusername = 1;
  if (this->newusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newusername().data(), static_cast<int>(this->newusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterRequest.newusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->newusername(), output);
  }

  // string newpasswd = 2;
  if (this->newpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newpasswd().data(), static_cast<int>(this->newpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterRequest.newpasswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newpasswd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.RegisterRequest)
}

::google::protobuf::uint8* RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string newusername = 1;
  if (this->newusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newusername().data(), static_cast<int>(this->newusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterRequest.newusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->newusername(), target);
  }

  // string newpasswd = 2;
  if (this->newpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newpasswd().data(), static_cast<int>(this->newpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterRequest.newpasswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newpasswd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.RegisterRequest)
  return target;
}

size_t RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.RegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string newusername = 1;
  if (this->newusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newusername());
  }

  // string newpasswd = 2;
  if (this->newpasswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newpasswd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.RegisterRequest)
    MergeFrom(*source);
  }
}

void RegisterRequest::MergeFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newusername().size() > 0) {

    newusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newusername_);
  }
  if (from.newpasswd().size() > 0) {

    newpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newpasswd_);
  }
}

void RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRequest::IsInitialized() const {
  return true;
}

void RegisterRequest::Swap(RegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterRequest::InternalSwap(RegisterRequest* other) {
  using std::swap;
  newusername_.Swap(&other->newusername_);
  newpasswd_.Swap(&other->newpasswd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResponse::kIssuccessFieldNumber;
const int RegisterResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResponse::RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsRegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.RegisterResponse)
}
RegisterResponse::RegisterResponse(const RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  issuccess_ = from.issuccess_;
  // @@protoc_insertion_point(copy_constructor:WZRY.RegisterResponse)
}

void RegisterResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _cached_size_ = 0;
}

RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:WZRY.RegisterResponse)
  SharedDtor();
}

void RegisterResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterResponse::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterResponse& RegisterResponse::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsRegisterResponse();
  return *internal_default_instance();
}

RegisterResponse* RegisterResponse::New(::google::protobuf::Arena* arena) const {
  RegisterResponse* n = new RegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _internal_metadata_.Clear();
}

bool RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.RegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool issuccess = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.RegisterResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.RegisterResponse)
  return false;
#undef DO_
}

void RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.RegisterResponse)
}

::google::protobuf::uint8* RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.RegisterResponse)
  return target;
}

size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.RegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.RegisterResponse)
    MergeFrom(*source);
  }
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.issuccess() != 0) {
    set_issuccess(from.issuccess());
  }
}

void RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResponse::IsInitialized() const {
  return true;
}

void RegisterResponse::Swap(RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResponse::InternalSwap(RegisterResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(issuccess_, other->issuccess_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchRequest::kIsmatchFieldNumber;
const int MatchRequest::kMatchtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchRequest::MatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsMatchRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.MatchRequest)
}
MatchRequest::MatchRequest(const MatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ismatch_, &from.ismatch_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchtype_) -
    reinterpret_cast<char*>(&ismatch_)) + sizeof(matchtype_));
  // @@protoc_insertion_point(copy_constructor:WZRY.MatchRequest)
}

void MatchRequest::SharedCtor() {
  ::memset(&ismatch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchtype_) -
      reinterpret_cast<char*>(&ismatch_)) + sizeof(matchtype_));
  _cached_size_ = 0;
}

MatchRequest::~MatchRequest() {
  // @@protoc_insertion_point(destructor:WZRY.MatchRequest)
  SharedDtor();
}

void MatchRequest::SharedDtor() {
}

void MatchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchRequest::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchRequest& MatchRequest::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsMatchRequest();
  return *internal_default_instance();
}

MatchRequest* MatchRequest::New(::google::protobuf::Arena* arena) const {
  MatchRequest* n = new MatchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.MatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ismatch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchtype_) -
      reinterpret_cast<char*>(&ismatch_)) + sizeof(matchtype_));
  _internal_metadata_.Clear();
}

bool MatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.MatchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ismatch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 matchtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &matchtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.MatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.MatchRequest)
  return false;
#undef DO_
}

void MatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.MatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ismatch = 1;
  if (this->ismatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ismatch(), output);
  }

  // int32 matchtype = 2;
  if (this->matchtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->matchtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.MatchRequest)
}

::google::protobuf::uint8* MatchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.MatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ismatch = 1;
  if (this->ismatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ismatch(), target);
  }

  // int32 matchtype = 2;
  if (this->matchtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->matchtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.MatchRequest)
  return target;
}

size_t MatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.MatchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool ismatch = 1;
  if (this->ismatch() != 0) {
    total_size += 1 + 1;
  }

  // int32 matchtype = 2;
  if (this->matchtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->matchtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.MatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.MatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.MatchRequest)
    MergeFrom(*source);
  }
}

void MatchRequest::MergeFrom(const MatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.MatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ismatch() != 0) {
    set_ismatch(from.ismatch());
  }
  if (from.matchtype() != 0) {
    set_matchtype(from.matchtype());
  }
}

void MatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.MatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchRequest::CopyFrom(const MatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.MatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchRequest::IsInitialized() const {
  return true;
}

void MatchRequest::Swap(MatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchRequest::InternalSwap(MatchRequest* other) {
  using std::swap;
  swap(ismatch_, other->ismatch_);
  swap(matchtype_, other->matchtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchRequest::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchResponse::kIssuccessFieldNumber;
const int MatchResponse::kMatchmessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchResponse::MatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsMatchResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.MatchResponse)
}
MatchResponse::MatchResponse(const MatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  matchmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.matchmessage().size() > 0) {
    matchmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.matchmessage_);
  }
  issuccess_ = from.issuccess_;
  // @@protoc_insertion_point(copy_constructor:WZRY.MatchResponse)
}

void MatchResponse::SharedCtor() {
  matchmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _cached_size_ = 0;
}

MatchResponse::~MatchResponse() {
  // @@protoc_insertion_point(destructor:WZRY.MatchResponse)
  SharedDtor();
}

void MatchResponse::SharedDtor() {
  matchmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MatchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchResponse::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchResponse& MatchResponse::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsMatchResponse();
  return *internal_default_instance();
}

MatchResponse* MatchResponse::New(::google::protobuf::Arena* arena) const {
  MatchResponse* n = new MatchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.MatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matchmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _internal_metadata_.Clear();
}

bool MatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.MatchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool issuccess = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string matchmessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_matchmessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->matchmessage().data(), static_cast<int>(this->matchmessage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.MatchResponse.matchmessage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.MatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.MatchResponse)
  return false;
#undef DO_
}

void MatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.MatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // string matchmessage = 2;
  if (this->matchmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->matchmessage().data(), static_cast<int>(this->matchmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.MatchResponse.matchmessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->matchmessage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.MatchResponse)
}

::google::protobuf::uint8* MatchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.MatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // string matchmessage = 2;
  if (this->matchmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->matchmessage().data(), static_cast<int>(this->matchmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.MatchResponse.matchmessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->matchmessage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.MatchResponse)
  return target;
}

size_t MatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.MatchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string matchmessage = 2;
  if (this->matchmessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->matchmessage());
  }

  // bool issuccess = 1;
  if (this->issuccess() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.MatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.MatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.MatchResponse)
    MergeFrom(*source);
  }
}

void MatchResponse::MergeFrom(const MatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.MatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matchmessage().size() > 0) {

    matchmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.matchmessage_);
  }
  if (from.issuccess() != 0) {
    set_issuccess(from.issuccess());
  }
}

void MatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.MatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchResponse::CopyFrom(const MatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.MatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchResponse::IsInitialized() const {
  return true;
}

void MatchResponse::Swap(MatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchResponse::InternalSwap(MatchResponse* other) {
  using std::swap;
  matchmessage_.Swap(&other->matchmessage_);
  swap(issuccess_, other->issuccess_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchResponse::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRequest::kIdFieldNumber;
const int ChatRequest::kChatmessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRequest::ChatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsChatRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.ChatRequest)
}
ChatRequest::ChatRequest(const ChatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chatmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chatmessage().size() > 0) {
    chatmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatmessage_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:WZRY.ChatRequest)
}

void ChatRequest::SharedCtor() {
  chatmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

ChatRequest::~ChatRequest() {
  // @@protoc_insertion_point(destructor:WZRY.ChatRequest)
  SharedDtor();
}

void ChatRequest::SharedDtor() {
  chatmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRequest::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRequest& ChatRequest::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsChatRequest();
  return *internal_default_instance();
}

ChatRequest* ChatRequest::New(::google::protobuf::Arena* arena) const {
  ChatRequest* n = new ChatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.ChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chatmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool ChatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.ChatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chatmessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatmessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chatmessage().data(), static_cast<int>(this->chatmessage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.ChatRequest.chatmessage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.ChatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.ChatRequest)
  return false;
#undef DO_
}

void ChatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.ChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string chatmessage = 2;
  if (this->chatmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatmessage().data(), static_cast<int>(this->chatmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatRequest.chatmessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chatmessage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.ChatRequest)
}

::google::protobuf::uint8* ChatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.ChatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string chatmessage = 2;
  if (this->chatmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatmessage().data(), static_cast<int>(this->chatmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatRequest.chatmessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chatmessage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.ChatRequest)
  return target;
}

size_t ChatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.ChatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string chatmessage = 2;
  if (this->chatmessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chatmessage());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.ChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.ChatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.ChatRequest)
    MergeFrom(*source);
  }
}

void ChatRequest::MergeFrom(const ChatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.ChatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chatmessage().size() > 0) {

    chatmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatmessage_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ChatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.ChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRequest::CopyFrom(const ChatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.ChatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRequest::IsInitialized() const {
  return true;
}

void ChatRequest::Swap(ChatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRequest::InternalSwap(ChatRequest* other) {
  using std::swap;
  chatmessage_.Swap(&other->chatmessage_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRequest::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatResponse::kIdFieldNumber;
const int ChatResponse::kChatmessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatResponse::ChatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsChatResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.ChatResponse)
}
ChatResponse::ChatResponse(const ChatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chatmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chatmessage().size() > 0) {
    chatmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatmessage_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:WZRY.ChatResponse)
}

void ChatResponse::SharedCtor() {
  chatmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

ChatResponse::~ChatResponse() {
  // @@protoc_insertion_point(destructor:WZRY.ChatResponse)
  SharedDtor();
}

void ChatResponse::SharedDtor() {
  chatmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatResponse::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatResponse& ChatResponse::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsChatResponse();
  return *internal_default_instance();
}

ChatResponse* ChatResponse::New(::google::protobuf::Arena* arena) const {
  ChatResponse* n = new ChatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.ChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chatmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool ChatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.ChatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chatmessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatmessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chatmessage().data(), static_cast<int>(this->chatmessage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.ChatResponse.chatmessage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.ChatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.ChatResponse)
  return false;
#undef DO_
}

void ChatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.ChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string chatmessage = 2;
  if (this->chatmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatmessage().data(), static_cast<int>(this->chatmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatResponse.chatmessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chatmessage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.ChatResponse)
}

::google::protobuf::uint8* ChatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.ChatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string chatmessage = 2;
  if (this->chatmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatmessage().data(), static_cast<int>(this->chatmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatResponse.chatmessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chatmessage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.ChatResponse)
  return target;
}

size_t ChatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.ChatResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string chatmessage = 2;
  if (this->chatmessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chatmessage());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.ChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.ChatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.ChatResponse)
    MergeFrom(*source);
  }
}

void ChatResponse::MergeFrom(const ChatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.ChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chatmessage().size() > 0) {

    chatmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatmessage_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ChatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.ChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatResponse::CopyFrom(const ChatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.ChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatResponse::IsInitialized() const {
  return true;
}

void ChatResponse::Swap(ChatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatResponse::InternalSwap(ChatResponse* other) {
  using std::swap;
  chatmessage_.Swap(&other->chatmessage_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatResponse::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SkillRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRequest::kIdFieldNumber;
const int SkillRequest::kSkillidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRequest::SkillRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsSkillRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.SkillRequest)
}
SkillRequest::SkillRequest(const SkillRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:WZRY.SkillRequest)
}

void SkillRequest::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skillid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(skillid_));
  _cached_size_ = 0;
}

SkillRequest::~SkillRequest() {
  // @@protoc_insertion_point(destructor:WZRY.SkillRequest)
  SharedDtor();
}

void SkillRequest::SharedDtor() {
}

void SkillRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRequest::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRequest& SkillRequest::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsSkillRequest();
  return *internal_default_instance();
}

SkillRequest* SkillRequest::New(::google::protobuf::Arena* arena) const {
  SkillRequest* n = new SkillRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.SkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skillid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(skillid_));
  _internal_metadata_.Clear();
}

bool SkillRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.SkillRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skillid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.SkillRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.SkillRequest)
  return false;
#undef DO_
}

void SkillRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.SkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 skillid = 2;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skillid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.SkillRequest)
}

::google::protobuf::uint8* SkillRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.SkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 skillid = 2;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skillid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.SkillRequest)
  return target;
}

size_t SkillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.SkillRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 skillid = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.SkillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.SkillRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.SkillRequest)
    MergeFrom(*source);
  }
}

void SkillRequest::MergeFrom(const SkillRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.SkillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
}

void SkillRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.SkillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRequest::CopyFrom(const SkillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.SkillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRequest::IsInitialized() const {
  return true;
}

void SkillRequest::Swap(SkillRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRequest::InternalSwap(SkillRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(skillid_, other->skillid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRequest::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SkillResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillResponse::kIdFieldNumber;
const int SkillResponse::kSkillidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillResponse::SkillResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_WZRYMessageProto_2eproto::InitDefaultsSkillResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.SkillResponse)
}
SkillResponse::SkillResponse(const SkillResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:WZRY.SkillResponse)
}

void SkillResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skillid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(skillid_));
  _cached_size_ = 0;
}

SkillResponse::~SkillResponse() {
  // @@protoc_insertion_point(destructor:WZRY.SkillResponse)
  SharedDtor();
}

void SkillResponse::SharedDtor() {
}

void SkillResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillResponse::descriptor() {
  ::protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillResponse& SkillResponse::default_instance() {
  ::protobuf_WZRYMessageProto_2eproto::InitDefaultsSkillResponse();
  return *internal_default_instance();
}

SkillResponse* SkillResponse::New(::google::protobuf::Arena* arena) const {
  SkillResponse* n = new SkillResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.SkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skillid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(skillid_));
  _internal_metadata_.Clear();
}

bool SkillResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.SkillResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skillid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.SkillResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.SkillResponse)
  return false;
#undef DO_
}

void SkillResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.SkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 skillid = 2;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skillid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.SkillResponse)
}

::google::protobuf::uint8* SkillResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.SkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 skillid = 2;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skillid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.SkillResponse)
  return target;
}

size_t SkillResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.SkillResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 skillid = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.SkillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.SkillResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.SkillResponse)
    MergeFrom(*source);
  }
}

void SkillResponse::MergeFrom(const SkillResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.SkillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
}

void SkillResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.SkillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillResponse::CopyFrom(const SkillResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.SkillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillResponse::IsInitialized() const {
  return true;
}

void SkillResponse::Swap(SkillResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillResponse::InternalSwap(SkillResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(skillid_, other->skillid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillResponse::GetMetadata() const {
  protobuf_WZRYMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_WZRYMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace WZRY

// @@protoc_insertion_point(global_scope)
