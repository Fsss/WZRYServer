// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMessageProto.proto

#include "ServerMessageProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace WZRY {
class LoginMSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginMSG>
      _instance;
} _LoginMSG_default_instance_;
class LoginRSPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRSPS>
      _instance;
} _LoginRSPS_default_instance_;
class RegisterMSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterMSG>
      _instance;
} _RegisterMSG_default_instance_;
class RegisterRSPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterRSPS>
      _instance;
} _RegisterRSPS_default_instance_;
class MatchMSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchMSG>
      _instance;
} _MatchMSG_default_instance_;
class MatchRSPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchRSPS>
      _instance;
} _MatchRSPS_default_instance_;
class ChatMSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMSG>
      _instance;
} _ChatMSG_default_instance_;
class ChatRSPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatRSPS>
      _instance;
} _ChatRSPS_default_instance_;
}  // namespace WZRY
namespace protobuf_ServerMessageProto_2eproto {
void InitDefaultsLoginMSGImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_LoginMSG_default_instance_;
    new (ptr) ::WZRY::LoginMSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::LoginMSG::InitAsDefaultInstance();
}

void InitDefaultsLoginMSG() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginMSGImpl);
}

void InitDefaultsLoginRSPSImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_LoginRSPS_default_instance_;
    new (ptr) ::WZRY::LoginRSPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::LoginRSPS::InitAsDefaultInstance();
}

void InitDefaultsLoginRSPS() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRSPSImpl);
}

void InitDefaultsRegisterMSGImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_RegisterMSG_default_instance_;
    new (ptr) ::WZRY::RegisterMSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::RegisterMSG::InitAsDefaultInstance();
}

void InitDefaultsRegisterMSG() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterMSGImpl);
}

void InitDefaultsRegisterRSPSImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_RegisterRSPS_default_instance_;
    new (ptr) ::WZRY::RegisterRSPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::RegisterRSPS::InitAsDefaultInstance();
}

void InitDefaultsRegisterRSPS() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterRSPSImpl);
}

void InitDefaultsMatchMSGImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_MatchMSG_default_instance_;
    new (ptr) ::WZRY::MatchMSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::MatchMSG::InitAsDefaultInstance();
}

void InitDefaultsMatchMSG() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchMSGImpl);
}

void InitDefaultsMatchRSPSImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_MatchRSPS_default_instance_;
    new (ptr) ::WZRY::MatchRSPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::MatchRSPS::InitAsDefaultInstance();
}

void InitDefaultsMatchRSPS() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchRSPSImpl);
}

void InitDefaultsChatMSGImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_ChatMSG_default_instance_;
    new (ptr) ::WZRY::ChatMSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::ChatMSG::InitAsDefaultInstance();
}

void InitDefaultsChatMSG() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatMSGImpl);
}

void InitDefaultsChatRSPSImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::WZRY::_ChatRSPS_default_instance_;
    new (ptr) ::WZRY::ChatRSPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WZRY::ChatRSPS::InitAsDefaultInstance();
}

void InitDefaultsChatRSPS() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatRSPSImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginMSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginMSG, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginMSG, passwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRSPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRSPS, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::LoginRSPS, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterMSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterMSG, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterMSG, newpasswd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterRSPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterRSPS, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::RegisterRSPS, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchMSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchMSG, ismatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchMSG, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchRSPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchRSPS, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::MatchRSPS, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatMSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatMSG, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatMSG, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatRSPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatRSPS, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WZRY::ChatRSPS, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::WZRY::LoginMSG)},
  { 7, -1, sizeof(::WZRY::LoginRSPS)},
  { 14, -1, sizeof(::WZRY::RegisterMSG)},
  { 21, -1, sizeof(::WZRY::RegisterRSPS)},
  { 28, -1, sizeof(::WZRY::MatchMSG)},
  { 35, -1, sizeof(::WZRY::MatchRSPS)},
  { 42, -1, sizeof(::WZRY::ChatMSG)},
  { 49, -1, sizeof(::WZRY::ChatRSPS)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_LoginMSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_LoginRSPS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_RegisterMSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_RegisterRSPS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_MatchMSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_MatchRSPS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_ChatMSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::WZRY::_ChatRSPS_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ServerMessageProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030ServerMessageProto.proto\022\004WZRY\",\n\010Logi"
      "nMSG\022\020\n\010username\030\001 \001(\t\022\016\n\006passwd\030\002 \001(\t\"*"
      "\n\tLoginRSPS\022\014\n\004type\030\001 \001(\005\022\017\n\007message\030\002 \001"
      "(\t\"1\n\013RegisterMSG\022\017\n\007newname\030\001 \001(\t\022\021\n\tne"
      "wpasswd\030\002 \001(\t\"-\n\014RegisterRSPS\022\014\n\004type\030\001 "
      "\001(\005\022\017\n\007message\030\002 \001(\t\")\n\010MatchMSG\022\017\n\007isMa"
      "tch\030\001 \001(\010\022\014\n\004type\030\002 \001(\005\"*\n\tMatchRSPS\022\017\n\007"
      "success\030\001 \001(\010\022\014\n\004type\030\002 \001(\005\"(\n\007ChatMSG\022\014"
      "\n\004type\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\",\n\010ChatRSP"
      "S\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\tb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 403);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMessageProto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerMessageProto_2eproto
namespace WZRY {

// ===================================================================

void LoginMSG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginMSG::kUsernameFieldNumber;
const int LoginMSG::kPasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginMSG::LoginMSG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsLoginMSG();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.LoginMSG)
}
LoginMSG::LoginMSG(const LoginMSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  // @@protoc_insertion_point(copy_constructor:WZRY.LoginMSG)
}

void LoginMSG::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginMSG::~LoginMSG() {
  // @@protoc_insertion_point(destructor:WZRY.LoginMSG)
  SharedDtor();
}

void LoginMSG::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginMSG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginMSG::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginMSG& LoginMSG::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsLoginMSG();
  return *internal_default_instance();
}

LoginMSG* LoginMSG::New(::google::protobuf::Arena* arena) const {
  LoginMSG* n = new LoginMSG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginMSG::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.LoginMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginMSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.LoginMSG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.LoginMSG.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), static_cast<int>(this->passwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.LoginMSG.passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.LoginMSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.LoginMSG)
  return false;
#undef DO_
}

void LoginMSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.LoginMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginMSG.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginMSG.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.LoginMSG)
}

::google::protobuf::uint8* LoginMSG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.LoginMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginMSG.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginMSG.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.LoginMSG)
  return target;
}

size_t LoginMSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.LoginMSG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string passwd = 2;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginMSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.LoginMSG)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginMSG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginMSG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.LoginMSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.LoginMSG)
    MergeFrom(*source);
  }
}

void LoginMSG::MergeFrom(const LoginMSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.LoginMSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
}

void LoginMSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.LoginMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginMSG::CopyFrom(const LoginMSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.LoginMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginMSG::IsInitialized() const {
  return true;
}

void LoginMSG::Swap(LoginMSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginMSG::InternalSwap(LoginMSG* other) {
  using std::swap;
  username_.Swap(&other->username_);
  passwd_.Swap(&other->passwd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginMSG::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRSPS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRSPS::kTypeFieldNumber;
const int LoginRSPS::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRSPS::LoginRSPS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsLoginRSPS();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.LoginRSPS)
}
LoginRSPS::LoginRSPS(const LoginRSPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:WZRY.LoginRSPS)
}

void LoginRSPS::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

LoginRSPS::~LoginRSPS() {
  // @@protoc_insertion_point(destructor:WZRY.LoginRSPS)
  SharedDtor();
}

void LoginRSPS::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRSPS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRSPS::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRSPS& LoginRSPS::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsLoginRSPS();
  return *internal_default_instance();
}

LoginRSPS* LoginRSPS::New(::google::protobuf::Arena* arena) const {
  LoginRSPS* n = new LoginRSPS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRSPS::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.LoginRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool LoginRSPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.LoginRSPS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.LoginRSPS.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.LoginRSPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.LoginRSPS)
  return false;
#undef DO_
}

void LoginRSPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.LoginRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginRSPS.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.LoginRSPS)
}

::google::protobuf::uint8* LoginRSPS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.LoginRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.LoginRSPS.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.LoginRSPS)
  return target;
}

size_t LoginRSPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.LoginRSPS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRSPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.LoginRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRSPS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRSPS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.LoginRSPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.LoginRSPS)
    MergeFrom(*source);
  }
}

void LoginRSPS::MergeFrom(const LoginRSPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.LoginRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void LoginRSPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.LoginRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRSPS::CopyFrom(const LoginRSPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.LoginRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRSPS::IsInitialized() const {
  return true;
}

void LoginRSPS::Swap(LoginRSPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRSPS::InternalSwap(LoginRSPS* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRSPS::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterMSG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterMSG::kNewnameFieldNumber;
const int RegisterMSG::kNewpasswdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterMSG::RegisterMSG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsRegisterMSG();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.RegisterMSG)
}
RegisterMSG::RegisterMSG(const RegisterMSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  newpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newpasswd().size() > 0) {
    newpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newpasswd_);
  }
  // @@protoc_insertion_point(copy_constructor:WZRY.RegisterMSG)
}

void RegisterMSG::SharedCtor() {
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpasswd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterMSG::~RegisterMSG() {
  // @@protoc_insertion_point(destructor:WZRY.RegisterMSG)
  SharedDtor();
}

void RegisterMSG::SharedDtor() {
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpasswd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterMSG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterMSG::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterMSG& RegisterMSG::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsRegisterMSG();
  return *internal_default_instance();
}

RegisterMSG* RegisterMSG::New(::google::protobuf::Arena* arena) const {
  RegisterMSG* n = new RegisterMSG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterMSG::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.RegisterMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RegisterMSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.RegisterMSG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string newname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newname().data(), static_cast<int>(this->newname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.RegisterMSG.newname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string newpasswd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newpasswd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newpasswd().data(), static_cast<int>(this->newpasswd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.RegisterMSG.newpasswd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.RegisterMSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.RegisterMSG)
  return false;
#undef DO_
}

void RegisterMSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.RegisterMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string newname = 1;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newname().data(), static_cast<int>(this->newname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterMSG.newname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->newname(), output);
  }

  // string newpasswd = 2;
  if (this->newpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newpasswd().data(), static_cast<int>(this->newpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterMSG.newpasswd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newpasswd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.RegisterMSG)
}

::google::protobuf::uint8* RegisterMSG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.RegisterMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string newname = 1;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newname().data(), static_cast<int>(this->newname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterMSG.newname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->newname(), target);
  }

  // string newpasswd = 2;
  if (this->newpasswd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newpasswd().data(), static_cast<int>(this->newpasswd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterMSG.newpasswd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newpasswd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.RegisterMSG)
  return target;
}

size_t RegisterMSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.RegisterMSG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string newname = 1;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newname());
  }

  // string newpasswd = 2;
  if (this->newpasswd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newpasswd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterMSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.RegisterMSG)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterMSG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterMSG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.RegisterMSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.RegisterMSG)
    MergeFrom(*source);
  }
}

void RegisterMSG::MergeFrom(const RegisterMSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.RegisterMSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.newpasswd().size() > 0) {

    newpasswd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newpasswd_);
  }
}

void RegisterMSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.RegisterMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterMSG::CopyFrom(const RegisterMSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.RegisterMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterMSG::IsInitialized() const {
  return true;
}

void RegisterMSG::Swap(RegisterMSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterMSG::InternalSwap(RegisterMSG* other) {
  using std::swap;
  newname_.Swap(&other->newname_);
  newpasswd_.Swap(&other->newpasswd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterMSG::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterRSPS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterRSPS::kTypeFieldNumber;
const int RegisterRSPS::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterRSPS::RegisterRSPS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsRegisterRSPS();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.RegisterRSPS)
}
RegisterRSPS::RegisterRSPS(const RegisterRSPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:WZRY.RegisterRSPS)
}

void RegisterRSPS::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

RegisterRSPS::~RegisterRSPS() {
  // @@protoc_insertion_point(destructor:WZRY.RegisterRSPS)
  SharedDtor();
}

void RegisterRSPS::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterRSPS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterRSPS::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterRSPS& RegisterRSPS::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsRegisterRSPS();
  return *internal_default_instance();
}

RegisterRSPS* RegisterRSPS::New(::google::protobuf::Arena* arena) const {
  RegisterRSPS* n = new RegisterRSPS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterRSPS::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.RegisterRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool RegisterRSPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.RegisterRSPS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.RegisterRSPS.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.RegisterRSPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.RegisterRSPS)
  return false;
#undef DO_
}

void RegisterRSPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.RegisterRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterRSPS.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.RegisterRSPS)
}

::google::protobuf::uint8* RegisterRSPS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.RegisterRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.RegisterRSPS.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.RegisterRSPS)
  return target;
}

size_t RegisterRSPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.RegisterRSPS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterRSPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.RegisterRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterRSPS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterRSPS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.RegisterRSPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.RegisterRSPS)
    MergeFrom(*source);
  }
}

void RegisterRSPS::MergeFrom(const RegisterRSPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.RegisterRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void RegisterRSPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.RegisterRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRSPS::CopyFrom(const RegisterRSPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.RegisterRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRSPS::IsInitialized() const {
  return true;
}

void RegisterRSPS::Swap(RegisterRSPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterRSPS::InternalSwap(RegisterRSPS* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterRSPS::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchMSG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchMSG::kIsMatchFieldNumber;
const int MatchMSG::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchMSG::MatchMSG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsMatchMSG();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.MatchMSG)
}
MatchMSG::MatchMSG(const MatchMSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ismatch_, &from.ismatch_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&ismatch_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:WZRY.MatchMSG)
}

void MatchMSG::SharedCtor() {
  ::memset(&ismatch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&ismatch_)) + sizeof(type_));
  _cached_size_ = 0;
}

MatchMSG::~MatchMSG() {
  // @@protoc_insertion_point(destructor:WZRY.MatchMSG)
  SharedDtor();
}

void MatchMSG::SharedDtor() {
}

void MatchMSG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchMSG::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchMSG& MatchMSG::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsMatchMSG();
  return *internal_default_instance();
}

MatchMSG* MatchMSG::New(::google::protobuf::Arena* arena) const {
  MatchMSG* n = new MatchMSG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchMSG::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.MatchMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ismatch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&ismatch_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MatchMSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.MatchMSG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isMatch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.MatchMSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.MatchMSG)
  return false;
#undef DO_
}

void MatchMSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.MatchMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isMatch = 1;
  if (this->ismatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ismatch(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.MatchMSG)
}

::google::protobuf::uint8* MatchMSG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.MatchMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isMatch = 1;
  if (this->ismatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ismatch(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.MatchMSG)
  return target;
}

size_t MatchMSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.MatchMSG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isMatch = 1;
  if (this->ismatch() != 0) {
    total_size += 1 + 1;
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchMSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.MatchMSG)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchMSG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchMSG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.MatchMSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.MatchMSG)
    MergeFrom(*source);
  }
}

void MatchMSG::MergeFrom(const MatchMSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.MatchMSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ismatch() != 0) {
    set_ismatch(from.ismatch());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MatchMSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.MatchMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchMSG::CopyFrom(const MatchMSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.MatchMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchMSG::IsInitialized() const {
  return true;
}

void MatchMSG::Swap(MatchMSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchMSG::InternalSwap(MatchMSG* other) {
  using std::swap;
  swap(ismatch_, other->ismatch_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchMSG::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchRSPS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchRSPS::kSuccessFieldNumber;
const int MatchRSPS::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchRSPS::MatchRSPS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsMatchRSPS();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.MatchRSPS)
}
MatchRSPS::MatchRSPS(const MatchRSPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&success_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:WZRY.MatchRSPS)
}

void MatchRSPS::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&success_)) + sizeof(type_));
  _cached_size_ = 0;
}

MatchRSPS::~MatchRSPS() {
  // @@protoc_insertion_point(destructor:WZRY.MatchRSPS)
  SharedDtor();
}

void MatchRSPS::SharedDtor() {
}

void MatchRSPS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchRSPS::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchRSPS& MatchRSPS::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsMatchRSPS();
  return *internal_default_instance();
}

MatchRSPS* MatchRSPS::New(::google::protobuf::Arena* arena) const {
  MatchRSPS* n = new MatchRSPS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchRSPS::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.MatchRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&success_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MatchRSPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.MatchRSPS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.MatchRSPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.MatchRSPS)
  return false;
#undef DO_
}

void MatchRSPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.MatchRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.MatchRSPS)
}

::google::protobuf::uint8* MatchRSPS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.MatchRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.MatchRSPS)
  return target;
}

size_t MatchRSPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.MatchRSPS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchRSPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.MatchRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchRSPS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchRSPS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.MatchRSPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.MatchRSPS)
    MergeFrom(*source);
  }
}

void MatchRSPS::MergeFrom(const MatchRSPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.MatchRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MatchRSPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.MatchRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchRSPS::CopyFrom(const MatchRSPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.MatchRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchRSPS::IsInitialized() const {
  return true;
}

void MatchRSPS::Swap(MatchRSPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchRSPS::InternalSwap(MatchRSPS* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchRSPS::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMSG::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMSG::kTypeFieldNumber;
const int ChatMSG::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMSG::ChatMSG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsChatMSG();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.ChatMSG)
}
ChatMSG::ChatMSG(const ChatMSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:WZRY.ChatMSG)
}

void ChatMSG::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

ChatMSG::~ChatMSG() {
  // @@protoc_insertion_point(destructor:WZRY.ChatMSG)
  SharedDtor();
}

void ChatMSG::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMSG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMSG::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMSG& ChatMSG::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsChatMSG();
  return *internal_default_instance();
}

ChatMSG* ChatMSG::New(::google::protobuf::Arena* arena) const {
  ChatMSG* n = new ChatMSG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMSG::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.ChatMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ChatMSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.ChatMSG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.ChatMSG.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.ChatMSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.ChatMSG)
  return false;
#undef DO_
}

void ChatMSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.ChatMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatMSG.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.ChatMSG)
}

::google::protobuf::uint8* ChatMSG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.ChatMSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatMSG.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.ChatMSG)
  return target;
}

size_t ChatMSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.ChatMSG)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.ChatMSG)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMSG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMSG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.ChatMSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.ChatMSG)
    MergeFrom(*source);
  }
}

void ChatMSG::MergeFrom(const ChatMSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.ChatMSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ChatMSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.ChatMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMSG::CopyFrom(const ChatMSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.ChatMSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMSG::IsInitialized() const {
  return true;
}

void ChatMSG::Swap(ChatMSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMSG::InternalSwap(ChatMSG* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMSG::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatRSPS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRSPS::kSuccessFieldNumber;
const int ChatRSPS::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRSPS::ChatRSPS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessageProto_2eproto::InitDefaultsChatRSPS();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WZRY.ChatRSPS)
}
ChatRSPS::ChatRSPS(const ChatRSPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:WZRY.ChatRSPS)
}

void ChatRSPS::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _cached_size_ = 0;
}

ChatRSPS::~ChatRSPS() {
  // @@protoc_insertion_point(destructor:WZRY.ChatRSPS)
  SharedDtor();
}

void ChatRSPS::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatRSPS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRSPS::descriptor() {
  ::protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRSPS& ChatRSPS::default_instance() {
  ::protobuf_ServerMessageProto_2eproto::InitDefaultsChatRSPS();
  return *internal_default_instance();
}

ChatRSPS* ChatRSPS::New(::google::protobuf::Arena* arena) const {
  ChatRSPS* n = new ChatRSPS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRSPS::Clear() {
// @@protoc_insertion_point(message_clear_start:WZRY.ChatRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool ChatRSPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WZRY.ChatRSPS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WZRY.ChatRSPS.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WZRY.ChatRSPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WZRY.ChatRSPS)
  return false;
#undef DO_
}

void ChatRSPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WZRY.ChatRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatRSPS.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WZRY.ChatRSPS)
}

::google::protobuf::uint8* ChatRSPS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WZRY.ChatRSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WZRY.ChatRSPS.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WZRY.ChatRSPS)
  return target;
}

size_t ChatRSPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WZRY.ChatRSPS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRSPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WZRY.ChatRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRSPS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRSPS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WZRY.ChatRSPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WZRY.ChatRSPS)
    MergeFrom(*source);
  }
}

void ChatRSPS::MergeFrom(const ChatRSPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WZRY.ChatRSPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void ChatRSPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WZRY.ChatRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRSPS::CopyFrom(const ChatRSPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WZRY.ChatRSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRSPS::IsInitialized() const {
  return true;
}

void ChatRSPS::Swap(ChatRSPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRSPS::InternalSwap(ChatRSPS* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRSPS::GetMetadata() const {
  protobuf_ServerMessageProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessageProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace WZRY

// @@protoc_insertion_point(global_scope)
